.TH QN_EASY_PUT_FILE 3 "JANUARY 2017" "Qiniu Cloud" "User Manuals"
.SH NAME
qn_easy_put_file \- upload a local file with least programming efforts

.SH SYNOPSIS
.nf
.R #include <qiniu/easy.h>
.sp
.RI "qn_json_object_ptr qn_easy_put_file(qn_easy_ptr restrict " easy ", const char * restrict " uptoken ", const char * restrict " fname ", qn_easy_put_extra_ptr restrict " ext ");"
.fi

.SH DESCRIPTION
.BR qn_easy_put_file ()
uploads a local file specified by
.I fname
with least programming efforts. Based on the size of the local file,
.BR qn_easy_put_file ()
choose a proper function to do the upload task: 
.BR qn_stor_put_file ()
will be chose if the size is less than 10MB; otherwise
.BR qn_stor_rp_put_file ()
which can save a lot of retry cost in case of transmitting through unstable networks. The size throttle value can be set by using
.BR qn_easy_pe_set_min_resumable_fsize ()
to fit different circumstances.

.I uptoken
must be a valid upload token generated by
.BR qn_mac_make_uptoken ().
The operation would fail if the local file is too large to upload before the deadline. So far the solution is setting a long enough dealtime timestamp in the put policy.

The upload behaviour can be tuned by setting options encapsulated in the
.I ext
arugment. Read
.BR qn_easy_pe_create "(3)"
for more details.

.SH RETURN VALUES
.BR qn_easy_put_file ()
returns a non-NULL pointer to the upload result object if the operation succeeds. The caller shall check the
.I fn-code
and
.I fn-error
fields in that object to check out what happened. All error codes and corresponding messages list as follow.

    +-------+-------------------------------------------------------+
    | Code  | Message                                               |
    +-------+-------------------------------------------------------+
    | 200   | OK.                                                   |
    +-------+-------------------------------------------------------+
    | 400   | Invalid HTTP request.                                 |
    +-------+-------------------------------------------------------+
    | 401   | Bad upload token (failed in authorization check).     |
    +-------+-------------------------------------------------------+
    | 599   | Server failed due to unknown reason and CONTACT US!   |
    +-------+-------------------------------------------------------+
    | 614   | File exists.                                          |
    +-------+-------------------------------------------------------+
    | 631   | Bucket doesn't exist.                                 |
    +-------+-------------------------------------------------------+

If encounter any internal error, a NULL pointer will be returned. In this case, call functions listed in
.BR qiniu-errors "(7)"
to determine what happened, and/or call
.BR qn_err_get_message (3)
to get an error message.

.SH AUTHORS
LIANG Tao, a consultant from Qiniu Cloud (QQ 510857, or emails to liangtao@qiniu.com or amethyst.black@gmail.com).

.SH SEE ALSO
.BR qn_easy_create "(3), " qn_stor_put_file "(3), " qn_stor_rp_put_file "(3), " qiniu-put-file "(7)"
